{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Components/customers/customers.component.ts","webpack:///src/app/Components/customers/customers.component.html","webpack:///src/app/Components/home/home.component.ts","webpack:///src/app/Components/home/home.component.html","webpack:///src/app/Models/usuario.ts","webpack:///src/app/Routes/app-routing.module.ts","webpack:///src/app/Services/usuario.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","CustomersComponent","Incremento","sumarUno","selector","templateUrl","styleUrls","HomeComponent","usuarioService","formBuilder","formularioRegistro","group","userForm","TUsuario","console","log","value","CUsuario","usuario","CrearUsuario","subscribe","result","userSelected","RespuestaOperacion","Exito","error","TraerUsuario","users","Usuario","Name","Description","Salario","mensaje","routes","path","component","pathMatch","AppRoutingModule","forRoot","imports","UsuarioService","http","API_URL","get","post","providedIn","AppComponent","AppModule","provide","useValue","declarations","providers","bootstrap","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n\n  public Incremento = 0 ;\n\n  constructor() { }\n  public sumarUno(){\n    this.Incremento++;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>customers works!</p>\n<h4>esto se incrementa si precionas... {{Incremento}}</h4>\n\n<button class=\" btn btn-outline-dark\" (click)=\"sumarUno()\">aumenta¡¡</button>\n","import { Component, OnInit } from '@angular/core';\nimport {UsuarioService} from '../../Services/usuario.service';\nimport {Usuario} from '../../Models/usuario';\nimport {FormGroup,FormBuilder} from '@angular/forms'\nimport { CurrencyPipe } from '@angular/common';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit{\n\n  userSelected: Usuario;\n  userForm: Usuario;\n  users: Usuario[];\n  mostrar: boolean;\n\n  constructor(public usuarioService: UsuarioService,private formBuilder:FormBuilder) {\n\n    // this.userForm.Name='';\n    // this.userForm.Description='';\n    // this.userForm.Salario=CurrencyPipe.arguments(2);\n  }\n  // {\n  //   Nombre:[''],\n  //   Description:[''],\n  //   Salario:['']\n  // }\n\n\n  formularioRegistro=this.formBuilder.group(\n    this.userForm= new Usuario(0,'','',0)\n  )\n\n  ngOnInit(){\n\n    this.TUsuario();\n  }\n  enviar(){\n    console.log(this.formularioRegistro.value);\n    this.CUsuario(this.formularioRegistro.value);\n  }\n\n  CUsuario(usuario:Usuario){\n    try\n    {\n      this.usuarioService.CrearUsuario(usuario).subscribe(result=>{\n        this.userSelected=result;\n        if(this.userSelected.RespuestaOperacion.Exito){\n          this.TUsuario();\n        }\n      });\n    }\n    catch\n    {\n      console.error('algo salio mal =(');\n    }\n\n  }\n\n  TUsuario() {\n    this.usuarioService.TraerUsuario()\n      .subscribe(result => {\n        this.users = result;\n        console.log(this.users);\n    }, error => console.error(error));\n  }\n}\n","<div class=\"container\">\n\n  <p *ngIf=\"!users\"><em>Loading...</em></p>\n  <div class=\"row\">\n    <div class=\"col-sm-6\">\n      <table class=\"table\" *ngIf=\"users\">\n        <thead>\n          <th>Nombre</th>\n          <th>Descripción</th>\n          <th>Salario</th>\n          <th></th>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let User of users\">\n            <td>{{User.Nombre}}</td>\n            <td>{{User.Description}}</td>\n            <td>{{User.Salario}}</td>\n            <td></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div class=\"col-sm-6\">\n      <div class=\"container\">\n      <div *ngIf=\"mostrar\">\n        <form (submit)=\"enviar()\" [formGroup]=\"formularioRegistro\">\n\n          <div class=\"form-group\">\n            <label for=\"Nombre\">Nombre</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"Name\">\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"Nombre\">Oficio</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"Description\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"Nombre\">Salario</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"Salario\">\n          </div>\n          <button class=\"btn btn-outline-primary\">Guardar</button>\n\n        </form>\n      </div>\n    </div>\n    </div>\n  </div>\n\n  <button class=\" btn btn-outline-dark\" (click)=\"mostrar=true\">Crear</button>\n  <button *ngIf=\"mostrar\" class=\" btn btn-outline-danger\" (click)=\"mostrar=false\">Cancelar</button>\n\n\n</div>\n","import { CurrencyPipe } from '@angular/common';\n\nexport class Usuario {\n  constructor(id?: number, Name?: string, Description?: string, Salario?: number, Exito?: boolean, mensaje?: string){\n    this.id = id;\n    this.Name = Name;\n    this.Description = Description;\n    this.Salario = Salario;\n\n\n  }\n  id?: number;\n  Name?: string;\n  Description?: string;\n  Salario?: number;\n  RespuestaOperacion?: {\n    Exito?: boolean;\n    Mensaje?: string;\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from '../Components/home/home.component';\nimport { CustomersComponent } from '../Components/customers/customers.component';\n\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent, pathMatch: 'full'},\n  {path: 'customers', component: CustomersComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Usuario} from '../Models/usuario';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  readonly API_URL = 'http://localhost:50907/api/';\n\n  constructor(private http: HttpClient) {\n  }\n\n  TraerUsuario(){\n     return this.http.get<Usuario[]>(this.API_URL + 'Usuario/Traer');\n  }\n  CrearUsuario(usuario: Usuario){\n    return this.http.post(this.API_URL + 'Usuario/Crear', {usuario});\n }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" routerLink=\"/\">Home</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/customers\">customers</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link \" routerLink=\"/\">Home</a>\n      </li>\n\n    </ul>\n  </div>\n</nav>\n\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {APP_BASE_HREF} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule } from './Routes/app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './Components/home/home.component';\nimport { CustomersComponent } from './Components/customers/customers.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CustomersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [{provide: APP_BASE_HREF, useValue: ''}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}